//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace System.Net.Security {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class SR {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal SR() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("System.Net.Http.Net.Security.SR", typeof(SR).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attempting to restart the session using the user-provided certificate: {0}..
        /// </summary>
        public static string event_AttemptingRestartUsingCert {
            get {
                return ResourceManager.GetString("event_AttemptingRestartUsingCert", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Got a certificate from the client delegate..
        /// </summary>
        public static string event_CertificateFromDelegate {
            get {
                return ResourceManager.GetString("event_CertificateFromDelegate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Certificate is of type X509Certificate2 and contains the private key..
        /// </summary>
        public static string event_CertIsType2 {
            get {
                return ResourceManager.GetString("event_CertIsType2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Left with {0} client certificates to choose from..
        /// </summary>
        public static string event_CertsAfterFiltering {
            get {
                return ResourceManager.GetString("event_CertsAfterFiltering", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enumerating security packages:.
        /// </summary>
        public static string event_EnumerateSecurityPackages {
            get {
                return ResourceManager.GetString("event_EnumerateSecurityPackages", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Trying to find a matching certificate in the certificate store..
        /// </summary>
        public static string event_FindingMatchingCerts {
            get {
                return ResourceManager.GetString("event_FindingMatchingCerts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Found the certificate in the {0} store..
        /// </summary>
        public static string event_FoundCertInStore {
            get {
                return ResourceManager.GetString("event_FoundCertInStore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Locating the private key for the certificate: {0}..
        /// </summary>
        public static string event_LocatingPrivateKey {
            get {
                return ResourceManager.GetString("event_LocatingPrivateKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to We have user-provided certificates. The server has specified {0} issuer(s). Looking for certificates that match any of the issuers..
        /// </summary>
        public static string event_LookForMatchingCerts {
            get {
                return ResourceManager.GetString("event_LookForMatchingCerts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Client delegate did not provide a certificate; but there are other user-provided certificates..
        /// </summary>
        public static string event_NoDelegateButClientCert {
            get {
                return ResourceManager.GetString("event_NoDelegateButClientCert", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Client delegate did not provide a certificate; and there are not other user-provided certificates. Need to attempt a session restart..
        /// </summary>
        public static string event_NoDelegateNoClientCert {
            get {
                return ResourceManager.GetString("event_NoDelegateNoClientCert", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to We have user-provided certificates. The server has not specified any issuers, so try all the certificates..
        /// </summary>
        public static string event_NoIssuersTryAllCerts {
            get {
                return ResourceManager.GetString("event_NoIssuersTryAllCerts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot find the certificate in either the LocalMachine store or the CurrentUser store..
        /// </summary>
        public static string event_NotFoundCertInStore {
            get {
                return ResourceManager.GetString("event_NotFoundCertInStore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} returned {1}..
        /// </summary>
        public static string event_OperationReturnedSomething {
            get {
                return ResourceManager.GetString("event_OperationReturnedSomething", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remote certificate was verified as valid by the user..
        /// </summary>
        public static string event_RemoteCertDeclaredValid {
            get {
                return ResourceManager.GetString("event_RemoteCertDeclaredValid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remote certificate has no errors..
        /// </summary>
        public static string event_RemoteCertHasNoErrors {
            get {
                return ResourceManager.GetString("event_RemoteCertHasNoErrors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remote certificate: {0}..
        /// </summary>
        public static string event_RemoteCertificate {
            get {
                return ResourceManager.GetString("event_RemoteCertificate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remote certificate was verified as invalid by the user..
        /// </summary>
        public static string event_RemoteCertUserDeclaredInvalid {
            get {
                return ResourceManager.GetString("event_RemoteCertUserDeclaredInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}(In-Buffer length={1}, Out-Buffer length={2}, returned code={3})..
        /// </summary>
        public static string event_SecurityContextInputBuffer {
            get {
                return ResourceManager.GetString("event_SecurityContextInputBuffer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}(In-Buffers count={1}, Out-Buffer length={2}, returned code={3})..
        /// </summary>
        public static string event_SecurityContextInputBuffers {
            get {
                return ResourceManager.GetString("event_SecurityContextInputBuffers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Selected certificate: {0}..
        /// </summary>
        public static string event_SelectedCert {
            get {
                return ResourceManager.GetString("event_SelectedCert", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Security package &apos;{0}&apos; was not found..
        /// </summary>
        public static string event_SspiPackageNotFound {
            get {
                return ResourceManager.GetString("event_SspiPackageNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}(Protocol={1}, Cipher={2} {3} bit strength, Hash={4} {5} bit strength, Key Exchange={6} {7} bit strength)..
        /// </summary>
        public static string event_SspiSelectedCipherSuite {
            get {
                return ResourceManager.GetString("event_SspiSelectedCipherSuite", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Using the cached credential handle..
        /// </summary>
        public static string event_UsingCachedCredential {
            get {
                return ResourceManager.GetString("event_UsingCachedCredential", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to allocate SSL/TLS context, OpenSSL error - {0}..
        /// </summary>
        public static string net_allocate_ssl_context_failed {
            get {
                return ResourceManager.GetString("net_allocate_ssl_context_failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ALPN configuration failed on this platform..
        /// </summary>
        public static string net_alpn_config_failed {
            get {
                return ResourceManager.GetString("net_alpn_config_failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No common application protocol exists between the client and the server. Application negotiation failed..
        /// </summary>
        public static string net_alpn_failed {
            get {
                return ResourceManager.GetString("net_alpn_failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Authentication failed on the remote side (the stream might still be available for additional authentication attempts)..
        /// </summary>
        public static string net_auth_alert {
            get {
                return ResourceManager.GetString("net_auth_alert", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The server has rejected the client credentials..
        /// </summary>
        public static string net_auth_bad_client_creds {
            get {
                return ResourceManager.GetString("net_auth_bad_client_creds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Either the target name is incorrect or the server has rejected the client credentials..
        /// </summary>
        public static string net_auth_bad_client_creds_or_target_mismatch {
            get {
                return ResourceManager.GetString("net_auth_bad_client_creds_or_target_mismatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Once authentication is attempted as the client or server, additional authentication attempts must use the same client or server role..
        /// </summary>
        public static string net_auth_client_server {
            get {
                return ResourceManager.GetString("net_auth_client_server", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A security requirement was not fulfilled during authentication. Required: {0}, negotiated: {1}..
        /// </summary>
        public static string net_auth_context_expectation {
            get {
                return ResourceManager.GetString("net_auth_context_expectation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A remote side security requirement was not fulfilled during authentication. Try increasing the ProtectionLevel and/or ImpersonationLevel..
        /// </summary>
        public static string net_auth_context_expectation_remote {
            get {
                return ResourceManager.GetString("net_auth_context_expectation_remote", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Authentication failed because the remote party has closed the transport stream..
        /// </summary>
        public static string net_auth_eof {
            get {
                return ResourceManager.GetString("net_auth_eof", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Re-authentication failed because the remote party continued to encrypt more than {0} bytes before answering re-authentication..
        /// </summary>
        public static string net_auth_ignored_reauth {
            get {
                return ResourceManager.GetString("net_auth_ignored_reauth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Protocol error: A received message contains a valid signature but it was not encrypted as required by the effective Protection Level..
        /// </summary>
        public static string net_auth_message_not_encrypted {
            get {
                return ResourceManager.GetString("net_auth_message_not_encrypted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An extended protection policy must specify either a custom channel binding or a custom service name collection..
        /// </summary>
        public static string net_auth_must_specify_extended_protection_scheme {
            get {
                return ResourceManager.GetString("net_auth_must_specify_extended_protection_scheme", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This operation is only allowed using a successfully authenticated context..
        /// </summary>
        public static string net_auth_noauth {
            get {
                return ResourceManager.GetString("net_auth_noauth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This operation is not allowed on a security context that has already been authenticated..
        /// </summary>
        public static string net_auth_reauth {
            get {
                return ResourceManager.GetString("net_auth_reauth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Authentication failed, see inner exception..
        /// </summary>
        public static string net_auth_SSPI {
            get {
                return ResourceManager.GetString("net_auth_SSPI", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The supported values are Identification, Impersonation or Delegation..
        /// </summary>
        public static string net_auth_supported_impl_levels {
            get {
                return ResourceManager.GetString("net_auth_supported_impl_levels", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &apos;{0}&apos; option was already set in the SslStream constructor..
        /// </summary>
        public static string net_conflicting_options {
            get {
                return ResourceManager.GetString("net_conflicting_options", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Insufficient buffer space. Required: {0} Actual: {1}..
        /// </summary>
        public static string net_context_buffer_too_small {
            get {
                return ResourceManager.GetString("net_context_buffer_too_small", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &apos;{0}&apos; encryption policy is not supported on this platform..
        /// </summary>
        public static string net_encryptionpolicy_notsupported {
            get {
                return ResourceManager.GetString("net_encryptionpolicy_notsupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The payload size is limited to {0}, attempted set it to {1}..
        /// </summary>
        public static string net_frame_max_size {
            get {
                return ResourceManager.GetString("net_frame_max_size", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Received incomplete authentication message. Remote party has probably closed the connection..
        /// </summary>
        public static string net_frame_read_io {
            get {
                return ResourceManager.GetString("net_frame_read_io", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot determine the frame size or a corrupted frame was received..
        /// </summary>
        public static string net_frame_read_size {
            get {
                return ResourceManager.GetString("net_frame_read_size", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Received an invalid authentication frame. The message size is limited to {0} bytes, attempted to read {1} bytes..
        /// </summary>
        public static string net_frame_size {
            get {
                return ResourceManager.GetString("net_frame_size", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Operation failed with error - {0}..
        /// </summary>
        public static string net_generic_operation_failed {
            get {
                return ResourceManager.GetString("net_generic_operation_failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GSSAPI operation failed with status: {0} (Minor status: {1})..
        /// </summary>
        public static string net_gssapi_operation_failed {
            get {
                return ResourceManager.GetString("net_gssapi_operation_failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GSSAPI operation failed with error - {0} ({1})..
        /// </summary>
        public static string net_gssapi_operation_failed_detailed {
            get {
                return ResourceManager.GetString("net_gssapi_operation_failed_detailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified value is not valid in the &apos;{0}&apos; enumeration..
        /// </summary>
        public static string net_invalid_enum {
            get {
                return ResourceManager.GetString("net_invalid_enum", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The parameter: {0} is not valid. Use the object returned from corresponding Begin async call..
        /// </summary>
        public static string net_io_async_result {
            get {
                return ResourceManager.GetString("net_io_async_result", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The connection was closed.
        /// </summary>
        public static string net_io_connectionclosed {
            get {
                return ResourceManager.GetString("net_io_connectionclosed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The decryption operation failed, see inner exception..
        /// </summary>
        public static string net_io_decrypt {
            get {
                return ResourceManager.GetString("net_io_decrypt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The encryption operation failed, see inner exception..
        /// </summary>
        public static string net_io_encrypt {
            get {
                return ResourceManager.GetString("net_io_encrypt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Received an unexpected EOF or 0 bytes from the transport stream..
        /// </summary>
        public static string net_io_eof {
            get {
                return ResourceManager.GetString("net_io_eof", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Found a wrong header field {0} read : {1}, expected : {2}..
        /// </summary>
        public static string net_io_header_id {
            get {
                return ResourceManager.GetString("net_io_header_id", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} can only be called once for each asynchronous operation..
        /// </summary>
        public static string net_io_invalidendcall {
            get {
                return ResourceManager.GetString("net_io_invalidendcall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The {0} method cannot be called when another {1} operation is pending..
        /// </summary>
        public static string net_io_invalidnestedcall {
            get {
                return ResourceManager.GetString("net_io_invalidnestedcall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The stream has to be read/write..
        /// </summary>
        public static string net_io_must_be_rw_stream {
            get {
                return ResourceManager.GetString("net_io_must_be_rw_stream", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The byte count must not exceed {0} bytes for this stream type..
        /// </summary>
        public static string net_io_out_range {
            get {
                return ResourceManager.GetString("net_io_out_range", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The read operation failed, see inner exception..
        /// </summary>
        public static string net_io_read {
            get {
                return ResourceManager.GetString("net_io_read", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to read data from the transport connection: {0}..
        /// </summary>
        public static string net_io_readfailure {
            get {
                return ResourceManager.GetString("net_io_readfailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The write operation failed, see inner exception..
        /// </summary>
        public static string net_io_write {
            get {
                return ResourceManager.GetString("net_io_write", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Opening Certificate store {0} failed, exception: {1}..
        /// </summary>
        public static string net_log_open_store_failed {
            get {
                return ResourceManager.GetString("net_log_open_store_failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} failed with error {1}..
        /// </summary>
        public static string net_log_operation_failed_with_error {
            get {
                return ResourceManager.GetString("net_log_operation_failed_with_error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remote certificate has errors:.
        /// </summary>
        public static string net_log_remote_cert_has_errors {
            get {
                return ResourceManager.GetString("net_log_remote_cert_has_errors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Certificate name mismatch..
        /// </summary>
        public static string net_log_remote_cert_name_mismatch {
            get {
                return ResourceManager.GetString("net_log_remote_cert_name_mismatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The remote server did not provide a certificate..
        /// </summary>
        public static string net_log_remote_cert_not_available {
            get {
                return ResourceManager.GetString("net_log_remote_cert_not_available", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This method is not implemented by this class..
        /// </summary>
        public static string net_MethodNotImplementedException {
            get {
                return ResourceManager.GetString("net_MethodNotImplementedException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No support for channel binding on operating systems other than Windows..
        /// </summary>
        public static string net_nego_channel_binding_not_supported {
            get {
                return ResourceManager.GetString("net_nego_channel_binding_not_supported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Target name should be non empty if default credentials are passed..
        /// </summary>
        public static string net_nego_not_supported_empty_target_with_defaultcreds {
            get {
                return ResourceManager.GetString("net_nego_not_supported_empty_target_with_defaultcreds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Requested protection level is not supported with the gssapi implementation currently installed..
        /// </summary>
        public static string net_nego_protection_level_not_supported {
            get {
                return ResourceManager.GetString("net_nego_protection_level_not_supported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Server implementation is not supported.
        /// </summary>
        public static string net_nego_server_not_supported {
            get {
                return ResourceManager.GetString("net_nego_server_not_supported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This stream does not support seek operations..
        /// </summary>
        public static string net_noseek {
            get {
                return ResourceManager.GetString("net_noseek", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to NTLM authentication is not possible with default credentials on this platform..
        /// </summary>
        public static string net_ntlm_not_possible_default_cred {
            get {
                return ResourceManager.GetString("net_ntlm_not_possible_default_cred", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sum of offset and count cannot be greater than the length of the buffer..
        /// </summary>
        public static string net_offset_plus_count {
            get {
                return ResourceManager.GetString("net_offset_plus_count", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The requested combination of SslProtocols ({0}) is not valid for this platform because it skips intermediate versions..
        /// </summary>
        public static string net_security_sslprotocol_contiguous {
            get {
                return ResourceManager.GetString("net_security_sslprotocol_contiguous", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The requested security package is not supported..
        /// </summary>
        public static string net_securitypackagesupport {
            get {
                return ResourceManager.GetString("net_securitypackagesupport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The requested security protocol is not supported..
        /// </summary>
        public static string net_securityprotocolnotsupported {
            get {
                return ResourceManager.GetString("net_securityprotocolnotsupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The application protocol value is invalid..
        /// </summary>
        public static string net_ssl_app_protocol_invalid {
            get {
                return ResourceManager.GetString("net_ssl_app_protocol_invalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The application protocol list is invalid..
        /// </summary>
        public static string net_ssl_app_protocols_invalid {
            get {
                return ResourceManager.GetString("net_ssl_app_protocols_invalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SSL certificate private key check failed with OpenSSL error - {0}..
        /// </summary>
        public static string net_ssl_check_private_key_failed {
            get {
                return ResourceManager.GetString("net_ssl_check_private_key_failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Decrypt failed with OpenSSL error - {0}..
        /// </summary>
        public static string net_ssl_decrypt_failed {
            get {
                return ResourceManager.GetString("net_ssl_decrypt_failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Encrypt failed with OpenSSL error - {0}..
        /// </summary>
        public static string net_ssl_encrypt_failed {
            get {
                return ResourceManager.GetString("net_ssl_encrypt_failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &apos;{0}&apos; encryption policy is not supported by this installation of OpenSSL..
        /// </summary>
        public static string net_ssl_encryptionpolicy_notsupported {
            get {
                return ResourceManager.GetString("net_ssl_encryptionpolicy_notsupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fetching channel binding token failed with OpenSSL error - {0}..
        /// </summary>
        public static string net_ssl_get_channel_binding_token_failed {
            get {
                return ResourceManager.GetString("net_ssl_get_channel_binding_token_failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Getting SSL connection info failed with OpenSSL error - {0}..
        /// </summary>
        public static string net_ssl_get_connection_info_failed {
            get {
                return ResourceManager.GetString("net_ssl_get_connection_info_failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SSL Handshake failed with OpenSSL error - {0}..
        /// </summary>
        public static string net_ssl_handshake_failed_error {
            get {
                return ResourceManager.GetString("net_ssl_handshake_failed_error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SSL certificate returned is invalid, OpenSSL error - {0}..
        /// </summary>
        public static string net_ssl_invalid_certificate {
            get {
                return ResourceManager.GetString("net_ssl_invalid_certificate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Write operations are not allowed after the channel was shutdown..
        /// </summary>
        public static string net_ssl_io_already_shutdown {
            get {
                return ResourceManager.GetString("net_ssl_io_already_shutdown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The remote certificate is invalid according to the validation procedure..
        /// </summary>
        public static string net_ssl_io_cert_validation {
            get {
                return ResourceManager.GetString("net_ssl_io_cert_validation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The handshake failed due to an unexpected packet format..
        /// </summary>
        public static string net_ssl_io_frame {
            get {
                return ResourceManager.GetString("net_ssl_io_frame", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The server mode SSL must use a certificate with the associated private key..
        /// </summary>
        public static string net_ssl_io_no_server_cert {
            get {
                return ResourceManager.GetString("net_ssl_io_no_server_cert", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The remote party requested renegotiation when AllowRenegotiation was set to false..
        /// </summary>
        public static string net_ssl_io_renego {
            get {
                return ResourceManager.GetString("net_ssl_io_renego", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SSL Read BIO failed with OpenSSL error - {0}..
        /// </summary>
        public static string net_ssl_read_bio_failed_error {
            get {
                return ResourceManager.GetString("net_ssl_read_bio_failed_error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Using SSL certificate failed with OpenSSL error - {0}..
        /// </summary>
        public static string net_ssl_use_cert_failed {
            get {
                return ResourceManager.GetString("net_ssl_use_cert_failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Using SSL certificate private key failed with OpenSSL error - {0}..
        /// </summary>
        public static string net_ssl_use_private_key_failed {
            get {
                return ResourceManager.GetString("net_ssl_use_private_key_failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SSL Write BIO failed with OpenSSL error - {0}..
        /// </summary>
        public static string net_ssl_write_bio_failed_error {
            get {
                return ResourceManager.GetString("net_ssl_write_bio_failed_error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to push X509_NAME into stack..
        /// </summary>
        public static string net_ssl_x509Name_push_failed_error {
            get {
                return ResourceManager.GetString("net_ssl_x509Name_push_failed_error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The ServiceNameCollection must contain at least one service name..
        /// </summary>
        public static string security_ExtendedProtectionPolicy_NoEmptyServiceNameCollection {
            get {
                return ResourceManager.GetString("security_ExtendedProtectionPolicy_NoEmptyServiceNameCollection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To construct a policy with PolicyEnforcement.Never, the single-parameter constructor must be used..
        /// </summary>
        public static string security_ExtendedProtectionPolicy_UseDifferentConstructorForNever {
            get {
                return ResourceManager.GetString("security_ExtendedProtectionPolicy_UseDifferentConstructorForNever", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A service name must not be null or empty..
        /// </summary>
        public static string security_ServiceNameCollection_EmptyServiceName {
            get {
                return ResourceManager.GetString("security_ServiceNameCollection_EmptyServiceName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; is not a supported handle type..
        /// </summary>
        public static string SSPIInvalidHandleType {
            get {
                return ResourceManager.GetString("SSPIInvalidHandleType", resourceCulture);
            }
        }
    }
}
